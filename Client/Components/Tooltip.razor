@inject HttpClient Http

<div class="tooltip-container"
     @onmouseover="ShowTooltipHandler"
     @onmouseout="HideTooltipHandler">
    @ChildContent
    @if (ShowTooltip && !string.IsNullOrWhiteSpace(TooltipText))
    {
        <div class="tooltip-box">
            @TooltipText
        </div>
    }
</div>

<style>
    .tooltip-container {
        position: relative;
        display: inline-block;
    }

    .tooltip-box {
        position: absolute;
        top: -35px; /* Slightly closer to the child content */
        left: 50%;
        transform: translateX(-50%);
        background-color: rgba(107, 174, 255, 0.9); /* Softer light blue with some transparency */
        color: #fff; /* White text for better contrast */
        padding: 6px 10px; /* Slightly reduced padding for a gentler look */
        border-radius: 4px;
        white-space: nowrap;
        z-index: 1000;
        text-align: center;
        font-size: 13px;
        font-weight: normal; /* Less bold for gentler appearance */
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15); /* Soft shadow for depth */
        opacity: 0;
        visibility: hidden;
        transition: opacity 0.3s ease, visibility 0.3s ease;
    }

    .tooltip-container:hover .tooltip-box {
        opacity: 1;
        visibility: visible;
    }

    /* Tooltip arrow */
    .tooltip-box::after {
        content: "";
        position: absolute;
        bottom: -6px; /* Adjusted to align with new tooltip position */
        left: 50%;
        transform: translateX(-50%);
        border-width: 6px;
        border-style: solid;
        border-color: rgba(107, 174, 255, 0.9) transparent transparent transparent; /* Matching arrow color with tooltip */
    }
</style>

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; } = default!;

    [Parameter]
    public string TooltipText { get; set; } = string.Empty;

    private bool ShowTooltip { get; set; }

    private void ShowTooltipHandler()
    {
        if (!string.IsNullOrWhiteSpace(TooltipText))
        {
            ShowTooltip = true;
        }
    }

    private void HideTooltipHandler()
    {
        ShowTooltip = false;
    }
}
