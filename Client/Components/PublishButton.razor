@using template.Shared.Models.Game;
@using template.Shared.Models;
@inject HttpClient Http;

<Tooltip TooltipText="@GetTooltipText()">
    <button class="base-button publish-button @GetButtonClass()" @onclick="TogglePublish" disabled="@(!game.CanPublish)">
        @GetButtonText()
    </button>
</Tooltip>

<img src="./Icons/Confetti.svg" alt="Confetti Celebration" class="confetti-image @(showConfetti ? "show" : "")" />

<style>
    .publish-button {
        width: 143px;
    }

        .publish-button.published {
            background-color: #EF7853;
            color: white;
        }

        .publish-button.to-publish {
            background-color: #4F97D7;
            color: white;
        }

        .publish-button:hover:not([disabled]) {
            filter: brightness(90%);
        }

        .publish-button:active:not([disabled]) {
            transform: scale(0.95);
        }

    .confetti-image {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        object-fit: cover;
        z-index: 1000;
        pointer-events: none;
        opacity: 0;
        transition: opacity 1s ease-in-out;
    }

        .confetti-image.show {
            opacity: 1;
        }
</style>

@code {
    [Parameter]
    public GameTable game { get; set; }

    [Parameter]
    public EventCallback OnGameUpdated { get; set; }

    [Parameter]
    public Action<ToastMessage> OnShowToast { get; set; }

    private bool showConfetti = false;

    private async Task TogglePublish()
    {
        if (!game.CanPublish)
        {
            OnShowToast?.Invoke(new ToastMessage { Message = "לא ניתן לפרסם את המשחק הזה", Type = "error" });
            return;
        }

        PublishGame gameToSend = new PublishGame
            {
                ID = game.ID,
                IsPublish = !game.IsPublish
            };

        var publishGameResponse = await Http.PostAsJsonAsync("api/Table/updateGameIsPublish", gameToSend);
        string error = await publishGameResponse.Content.ReadAsStringAsync();

        if (publishGameResponse.IsSuccessStatusCode)
        {
            bool wasUnpublished = !game.IsPublish;
            game.IsPublish = !game.IsPublish;
            game.LastUpdated = DateTime.Now;

            if (OnGameUpdated.HasDelegate)
            {
                await OnGameUpdated.InvokeAsync();
            }

            if (wasUnpublished && game.IsPublish)
            {
                showConfetti = true;
                StateHasChanged();

                await Task.Delay(2000);

                showConfetti = false;
                StateHasChanged();
            }

            string successMessage = game.IsPublish ? "המשחק פורסם בהצלחה" : "הפרסום בוטל בהצלחה";
            OnShowToast?.Invoke(new ToastMessage { Message = successMessage, Type = "success" });
        }
        else
        {
            if (error == "thisGameCannotBePublished")
            {
                game.IsPublish = false;
                game.CanPublish = false;
                OnShowToast?.Invoke(new ToastMessage { Message = "לא ניתן לפרסם את המשחק הזה", Type = "error" });
            }
            else
            {
                OnShowToast?.Invoke(new ToastMessage { Message = "שגיאה בפרסום המשחק", Type = "error" });
            }
        }
    }

    private string GetButtonClass()
    {
        if (!game.CanPublish)
        {
            return string.Empty;
        }
        else if (game.IsPublish)
        {
            return "published";
        }
        else
        {
            return "to-publish";
        }
    }

    private string GetButtonText()
    {
        if (!game.CanPublish)
        {
            return "לא ניתן לפרסום";
        }
        else if (game.IsPublish)
        {
            return "פורסם";
        }
        else
        {
            return "פרסם";
        }
    }

    private string GetTooltipText()
    {
        if (!game.CanPublish)
        {
            return "לא ניתן לפרסום";
        }
        else if (game.IsPublish)
        {
            return "לחץ כדי לבטל פרסום";
        }
        else
        {
            return "לחץ כדי לפרסם";
        }
    }
}
